/*

2.子父类中的函数：

当子类出现和父类一模一样的函数时，
当子类对象调用该函数，会运行子类函数的内容。
如同父类的函数被覆盖一样。

这种情况就是函数的另一个特性：重写（覆盖）

当子类继承父类，沿袭了父类的功能到子类中，
但是子类虽然具备该功能，但功能的内容却和父类不一样，
这时，没有必要定义新功能，而是使用覆盖特性，保留父类的功能定义，并重写功能内容。



*/

class fu
{
	void show1()
	{
		System.out.println("fu run");
	}

	void speak()
	{
		System.out.println("fu speeak");
	}
}

class zi extends fu
{
	void show()
	{
		System.out.println("zi run");
	}

	void speak()
	{
		super.speak();	//调用父类的功能，因为父类中的
						//speak功能已经被覆盖。
		System.out.println("zi speeak");
	}
}

class extendsdemo2 
{
	public static void main(String[] args) 
	{
		zi p = new zi();
		p.show1();
		p.show();
		p.speak();
	}
}
